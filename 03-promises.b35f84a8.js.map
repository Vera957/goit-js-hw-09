{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAMF,SAASC,cAAc,UACnC,IAAIE,EAAS,EACbC,MAAQ,EACRC,KAAO,EAIP,MAAMC,EAAgB,CAACC,EAAUH,IACxB,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUH,IAEpBM,EAAO,C,SAAEH,E,MAAUH,MAEpBA,MAIPF,EAAIa,iBAAiB,SAGrB,SAAkBC,GAChBA,EAAEC,iBACFC,QAAQC,IACN,8BAA8BhB,aAAkBC,gBAAgBC,QAElE,IAAK,IAAIe,EAAI,EAAGA,EAAIjB,EAAQiB,IAAK,CAC/B,IAAIC,EAAWD,EAAI,EACnBF,QAAQC,IAAI,QAAQC,sBAAsBC,aAAoBjB,SAC9DE,EAAce,EAAUjB,OACrBkB,MAAK,EAACf,SAAEA,EAAQH,MAAEA,MACjBc,QAAQC,IAAI,uBAAqBZ,QAAiBH,OAClDmB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBlB,QAAiBH,MAAW,CAE/CsB,QAAS,IACTC,SAAS,OAIdC,OAAM,EAACrB,SAAEA,EAAQH,MAAEA,MAClBc,QAAQC,IAAI,sBAAoBZ,QAAiBH,OACjDmB,EAAA1B,GAAS2B,OAAOK,QACd,sBAAoBtB,QAAeH,MAAW,CAE5CsB,QAAS,IACTC,SAAS,OAIbvB,OAAgBC,KACpBN,EAAK+B,WAhCT/B,EAAKgB,iBAAiB,SAmCtB,SAAgBC,GACdb,EAAS4B,OAAOf,EAAEgB,cAAcC,SAASC,OAAOC,OAChD/B,MAAQ2B,OAAOf,EAAEgB,cAAcC,SAAS7B,MAAM+B,OAC9C9B,KAAO0B,OAAOf,EAAEgB,cAAcC,SAAS5B,KAAK8B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst btn = document.querySelector('button');\nlet amount = 0;\ndelay = 0;\nstep = 0;\n\n\n\nconst createPromise = (position, delay) =>{\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbtn.addEventListener('click', onSubmit);\nform.addEventListener('input', picker);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  console.log(\n    `picker got values: amount: ${amount}, delay: ${delay}, step: ${step}`\n  );\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    console.log(`call ${i} times, position: ${position}, delay: ${delay}`);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      });\n        delay = delay + step;\n  } form.reset();\n}\n\nfunction picker(e) {\n  amount = Number(e.currentTarget.elements.amount.value);\n  delay = Number(e.currentTarget.elements.delay.value);\n  step = Number(e.currentTarget.elements.step.value);\n  /*console.log(\n    `picker got values: amount:${amount}, delay:${delay}, step${step}`\n  );*/\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$amount","delay","step","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","console","log","i","position1","then","$parcel$interopDefault","Notify","success","timeout","useIcon","catch","failure","reset","Number","currentTarget","elements","amount","value"],"version":3,"file":"03-promises.b35f84a8.js.map"}