{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAMF,SAASC,cAAc,UACnC,IAAIE,EAAS,EACTC,EAAQ,EACRC,EAAO,EAEX,MAAMC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,MAEpBA,MAIPN,EAAIe,iBAAiB,SAGrB,SAAkBC,GAChBA,EAAEC,iBACFC,QAAQC,IACN,8BAA8BlB,aAAkBC,YAAgBC,KAElE,IAAK,IAAIiB,EAAI,EAAGA,EAAInB,EAAQmB,IAAK,CAC/B,IAAIC,EAAWD,EAAI,EACnBF,QAAQC,IAAI,QAAQC,sBAAsBC,aAAoBnB,KAC9DE,EAAciB,EAAUnB,GACrBoB,MAAK,EAACjB,SAAEA,EAAUS,MAAAS,MACjBL,QAAQC,IAAI,uBAAqBd,QAAiBkB,OAClDC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBkB,MAAW,CAE/CI,QAAS,IACTC,SAAS,OAIdC,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MAClBZ,QAAQC,IAAI,sBAAoBd,QAAiByB,OACjDN,EAAA7B,GAAS8B,OAAOM,QACd,sBAAoB1B,QAAeyB,MAAW,CAE5CH,QAAS,IACTC,SAAS,OAIjB1B,GAAgBC,EAElBN,EAAKmC,WAjCPnC,EAAKkB,iBAAiB,SAoCtB,SAAgBC,GACdf,EAASgC,OAAOjB,EAAEkB,cAAcC,SAASC,OAAOC,OAChDnC,EAAQ+B,OAAOjB,EAAEkB,cAAcC,SAASrB,MAAMuB,OAC9ClC,EAAO8B,OAAOjB,EAAEkB,cAAcC,SAASG,KAAKD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst btn = document.querySelector('button');\nlet amount = 0;\nlet delay = 0;\nlet step = 0;\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nbtn.addEventListener('click', onSubmit);\nform.addEventListener('input', picker);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  console.log(\n    `picker got values: amount: ${amount}, delay: ${delay}, step: ${step}`\n  );\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    console.log(`call ${i} times, position: ${position}, delay: ${delay}`);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      });\n    delay = delay + step;\n  }\n  form.reset();\n}\n\nfunction picker(e) {\n  amount = Number(e.currentTarget.elements.amount.value);\n  delay = Number(e.currentTarget.elements.delay.value);\n  step = Number(e.currentTarget.elements.step.value);\n  /*console.log(\n    `picker got values: amount:${amount}, delay:${delay}, step${step}`\n  );*/\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","console","log","i","position1","then","delay2","$parcel$interopDefault","Notify","success","timeout","useIcon","catch","delay3","failure","reset","Number","currentTarget","elements","amount","value","step"],"version":3,"file":"03-promises.e20a2ff5.js.map"}